const fs = require('fs')

var apiconf = {
    name: 'REST API',
    methods: {
        ping: {}, // GET
        connect: { // GET
            apiVersion: 'string',
            apiKey: 'string'
        },
        disconnect: {}, // GET
        nodeRate: { // GET
            token: 'string'
        },
        nodeState: { // GET
            req: {
                nodeId: 'string'
            },
            res: {
                info: 'string',
                uptime: 'date',
                exchanges: 'array'
            }
        },
        poolNotifications: { // GET
            res: {
                notifications: 'array'
            }
        }
    },
    events: {
        node: {
            type: ['added', 'deleted', 'connected', 'disconnected']
        },
        error: {
            ERR1: 'rate difference is out of range'
        }
    }
};

// templates

var tplWarningBanner = `// FILE IS GENERATED! DON'T EDIT! Generated by apigen.js ${new Date().toString()}\n`;

function generateServerRoutes(routes) {
    var tpl = `${tplWarningBanner}
const
    api = require('./server-api');

function initRoute(app) {
${routes}
}

module.exports = {
    'initRoute': initRoute
}
`;
    return tpl;
}

function generateServerApiTemplate(fns, exports) {
    var tpl = `${tplWarningBanner}
// copypaste new functions for init:
//  server-api.template.js -> server-api.js

const
    logger = require('../logger');

${fns}
module.exports = {
${exports}
}
`;
        return tpl;
}


function generateClientApi(fns, exports) {
    var tpl = `${tplWarningBanner}
const
    logger = require('../logger'),
	got = require('got');
${fns}
module.exports = {
${exports}
}
`;
            return tpl;
}

function generateAPI() {
    var serverRoutes = '';
    var serverApiFns = '';
    var serverApiExports = '';
    var clientApiFns = '';
    var clientApiExports = '';

    // process methods

    for (method in apiconf.methods) {
        var methodName = method;
        console.log(method);

        apiPathUrl = `'/api/v1/${methodName}'`;
        var methodNameCapitalized = methodName.charAt(0).toUpperCase() + methodName.slice(1);
        var fnname = `get${methodNameCapitalized}`;
        
        // server routes

        serverRoutes += 
`
    app.use(${apiPathUrl}, api.${fnname});
`;

        // server api functions

        serverApiFns += 
`function ${fnname}(req, res, next) {
    logger.info('${fnname} success');
    res.json({
    });
}\n`;

        serverApiExports += `    ${fnname}: ${fnname},\n`;

        // client api functions

        clientApiFns += `
async function ${methodName}(host) {
    var res = (await got(host + ${apiPathUrl},{json:true})).body;
    return res;
};\n`;
        clientApiExports += `    ${methodName}: ${methodName},\n`;
    }


    // remove last ',\n'
    serverApiExports = serverApiExports.substring(0, serverApiExports.length - 2);
    clientApiExports = clientApiExports.substring(0, clientApiExports.length - 2);
    
    // process clients

    console.log(serverRoutes);
    console.log(serverApiFns);
    console.log(serverApiExports);
    console.log(clientApiFns);
    console.log(clientApiExports);
    
    console.log('output to', __dirname);
    
    fs.writeFileSync(__dirname + '/server-route.js', generateServerRoutes(serverRoutes));
    fs.writeFileSync(__dirname + '/server-api.template.js', generateServerApiTemplate(serverApiFns, serverApiExports));
    fs.writeFileSync(__dirname + '/client-api.js', generateClientApi(clientApiFns, clientApiExports));
}
/*
function setupRoutes() {
    {'/ping', (req, res, next)=>{
        res.json('pong!');
    }};
}*/

function generate() {
    generateAPI();
}

module.exports = {
    generate: generate
}
